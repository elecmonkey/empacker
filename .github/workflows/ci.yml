# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'          # 所有版本标签
      - 'github-*'    # GitHub Packages 发布
      - 'npm-*'       # npm 发布
      - 'both-*'      # 同时发布到两个平台
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Verify pnpm installation
      run: pnpm --version
    - name: Install dependencies
      run: pnpm install
    - name: Type check
      run: pnpm run type
    - name: Build
      run: pnpm run build
    - name: Run tests
      run: pnpm run test:run

  publish-github:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/github-') || startsWith(github.ref, 'refs/tags/both-')
    
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: https://npm.pkg.github.com/
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Build
      run: pnpm run build
    - name: Configure GitHub Package Registry
      run: |
        echo "@elecmonkey:registry=https://npm.pkg.github.com/" >> .npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
    - name: Publish to GitHub Packages
      run: pnpm publish --access public --registry https://npm.pkg.github.com/
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/npm-') || startsWith(github.ref, 'refs/tags/both-') || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: https://registry.npmjs.org/
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: Build
      run: pnpm run build
    - name: Publish to npm
      run: pnpm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    needs: [test, publish-npm]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/both-')
    
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        # No pnpm commands needed in create-release job, so no pnpm setup here
        # cache: 'pnpm'
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## 更新内容
          
          详细的更新内容请查看 [CHANGELOG.md](./CHANGELOG.md)
          
          ## 安装方式
          
          ```bash
          # 从 npm 安装
          npm install @elecmonkey/empacker
          
          # 从 GitHub Packages 安装
          npm install @elecmonkey/empacker --registry=https://npm.pkg.github.com/
          ``` 